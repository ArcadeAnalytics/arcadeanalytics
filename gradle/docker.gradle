buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.2.1'
    }
}

apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task copyDockerFiles(type: Copy) {
    description = "Copy Dockerfile and required data to build directory"
    from 'src/main/docker'
    from "${project.buildDir}/libs"
    from './arcade-connectors'
    into { "${project.buildDir}/docker" }
    include "*"
    exclude "**/*.yml"
}

task buildDocker(type: DockerBuildImage, dependsOn: 'copyDockerFiles') {
    description = "Package application as Docker image"
    group = "Docker"
    inputDir = project.file("${project.buildDir}/docker")
    def date = new Date().format('yyyyMMdd')
    tags = ["arcadeanalytics/arcadeanalytics:latest".toString(), "arcadeanalytics/arcadeanalytics:${date}".toString(), "arcadeanalytics/arcadeanalytics:${project.version}".toString()]
}

task buildDockerSingle(type: DockerBuildImage, dependsOn: 'copyDockerFiles') {
    description = "Package application SINGLE as Docker image"
    group = "Docker"
    inputDir = project.file("${project.buildDir}/docker")
    def date = new Date().format('yyyyMMdd')
    tags = ["arcadeanalytics/arcadeanalytics:latest-single".toString(), "arcadeanalytics/arcadeanalytics:${date}-single".toString(), "arcadeanalytic/arcadeanalytics:${project.version}-single".toString()]
}



